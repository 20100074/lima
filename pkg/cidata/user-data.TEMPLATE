#cloud-config
# vim:syntax=yaml

growpart:
  mode: auto
  devices: ['/']

users:
  - name: "{{.User}}"
    uid: "{{.UID}}"
    homedir: "/home/{{.User}}.linux"
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    lock_passwd: true
    ssh-authorized-keys:
    {{- range $val := .SSHPubKeys}}
      - {{$val}}
    {{- end}}

write_files:
 - content: |
      #!/bin/bash
      set -eux -o pipefail

      {{- if .Containerd.User}}
      # Set up env
      for f in .profile .bashrc; do
        if ! grep -q "# Lima BEGIN" "/home/{{.User}}.linux/$f"; then
          cat >>"/home/{{.User}}.linux/$f" <<EOF
      # Lima BEGIN
      # Make sure iptables and mount.fuse3 are available
      PATH="$PATH:/usr/sbin:/sbin"
      # fuse-overlayfs is the most stable snapshotter for rootless
      CONTAINERD_SNAPSHOTTER="fuse-overlayfs"
      export PATH CONTAINERD_SNAPSHOTTER
      # Lima END
      EOF
          chown "{{.User}}" "/home/{{.User}}.linux/$f"
        fi
      done
      # Enable cgroup delegation (only meaningful on cgroup v2)
      if [ ! -e "/etc/systemd/system/user@.service.d/lima.conf" ]; then
        mkdir -p "/etc/systemd/system/user@.service.d"
        cat >"/etc/systemd/system/user@.service.d/lima.conf"  <<EOF
      [Service]
      Delegate=yes
      EOF
      fi
      systemctl daemon-reload

      # Set up sysctl
      sysctl_conf="/etc/sysctl.d/99-lima.conf"
      if [ ! -e "${sysctl_conf}" ]; then
        if [ -e "/proc/sys/kernel/unprivileged_userns_clone" ]; then
          echo "kernel.unprivileged_userns_clone=1" >> "${sysctl_conf}"
        fi
        echo "net.ipv4.ping_group_range = 0 2147483647" >> "${sysctl_conf}"
        echo "net.ipv4.ip_unprivileged_port_start=0" >> "${sysctl_conf}"
        sysctl --system
      fi

      # Set up subuid
      for f in /etc/subuid /etc/subgid; do
        grep -qw "{{.User}}" $f || echo "{{.User}}:100000:65536" >> $f
      done

      # Start systemd session
      loginctl enable-linger "{{.User}}"
      {{- end}}

      # Create mount points
      {{- range $val := .Mounts}}
      mkdir -p "{{$val}}"
      chown "{{$.User}}" "{{$val}}" || true
      {{- end}}

      # Install or update the guestagent binary
      mkdir -p -m 600 /mnt/lima-cidata
      mount -t iso9660 -o ro /dev/disk/by-label/cidata /mnt/lima-cidata
      install -m 755 /mnt/lima-cidata/lima-guestagent /usr/local/bin/lima-guestagent
      umount /mnt/lima-cidata

      # Launch the guestagent service
      until [ -e "/run/user/{{.UID}}/systemd/private" ]; do sleep 3; done
      sudo -iu "{{.User}}" "XDG_RUNTIME_DIR=/run/user/{{.UID}}" lima-guestagent install-systemd
   owner: root:root
   # We do not use per-once.
   path: /var/lib/cloud/scripts/per-boot/00-base.boot.sh
   permissions: '0755'
 {{- if or .Mounts .Containerd.System .Containerd.User }}
 - content: |
      #!/bin/bash
      set -eux -o pipefail
      # Install minimum dependencies
      if command -v apt-get 2>&1 >/dev/null; then
        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        {{- if .Mounts}}
        apt-get install -y sshfs
        {{- end }}
        {{- if or .Containerd.System .Containerd.User }}
        apt-get install -y iptables
        {{- end }}
        {{- if .Containerd.User}}
        apt-get install -y uidmap fuse3 dbus-user-session
        {{- end }}
      elif command -v dnf 2>&1 >/dev/null; then
        : {{/* make sure the "elif" block is never empty */}}
        {{- if .Mounts}}
        dnf install -y fuse-sshfs
        {{- end}}
        {{- if or .Containerd.System .Containerd.User }}
        dnf install -y iptables
        {{- end }}
        {{- if .Containerd.User}}
        dnf install -y shadow-utils fuse3
        if [ ! -f /usr/bin/fusermount ]; then
          # Workaround for https://github.com/containerd/stargz-snapshotter/issues/340
          ln -s fusermount3 /usr/bin/fusermount
        fi
        {{- end}}
      fi
      # Modify /etc/fuse.conf to allow "-o allow_root"
      {{- if .Mounts }}
      if ! grep -q "^user_allow_other" /etc/fuse.conf ; then
        echo "user_allow_other" >> /etc/fuse.conf
      fi
      {{- end}}
   owner: root:root
   path: /var/lib/cloud/scripts/per-boot/10-install-packages.boot.sh
   permissions: '0755'
{{- end}}
{{- if or .Containerd.System .Containerd.User}}
 - content: |
      #!/bin/bash
      set -eux -o pipefail
      if [ ! -x /usr/local/bin/nerdctl ]; then
        mkdir -p -m 600 /mnt/lima-cidata
        mount -t iso9660 -o ro /dev/disk/by-label/cidata /mnt/lima-cidata
        tar Cxzf /usr/local /mnt/lima-cidata/nerdctl-full.tgz
        umount /mnt/lima-cidata
      fi
      {{- if .Containerd.System}}
      mkdir -p /etc/containerd
      cat >"/etc/containerd/config.toml" <<EOF
        version = 2
        [proxy_plugins]
          [proxy_plugins."stargz"]
            type = "snapshot"
            address = "/run/containerd-stargz-grpc/containerd-stargz-grpc.sock"
      EOF
      systemctl enable --now containerd buildkit stargz-snapshotter
      {{- end}}
      {{- if .Containerd.User}}
      modprobe tap || true
      if [ ! -e "/home/{{.User}}.linux/.config/containerd/config.toml" ]; then
        mkdir -p "/home/{{.User}}.linux/.config/containerd"
        cat >"/home/{{.User}}.linux/.config/containerd/config.toml" <<EOF
        version = 2
        [proxy_plugins]
          [proxy_plugins."fuse-overlayfs"]
            type = "snapshot"
            address = "/run/user/{{.UID}}/containerd-fuse-overlayfs.sock"
          [proxy_plugins."stargz"]
            type = "snapshot"
            address = "/run/user/{{.UID}}/containerd-stargz-grpc/containerd-stargz-grpc.sock"
      EOF
        chown -R "{{.User}}" "/home/{{.User}}.linux/.config"
      fi
      selinux=
      if command -v selinuxenabled 2>&1 >/dev/null && selinuxenabled; then
        selinux=1
      fi
      if [ ! -e "/home/{{.User}}}}.linux/.config/systemd/user/containerd.service" ]; then
        until [ -e "/run/user/{{.UID}}/systemd/private" ]; do sleep 3; done
        if [ -n "$selinux" ]; then
          echo "Temporarily disabling SELinux, during installing containerd units"
          setenforce 0
        fi
        sudo -iu "{{.User}}" "XDG_RUNTIME_DIR=/run/user/{{.UID}}" systemctl --user enable --now dbus
        sudo -iu "{{.User}}" "XDG_RUNTIME_DIR=/run/user/{{.UID}}" containerd-rootless-setuptool.sh install
        sudo -iu "{{.User}}" "XDG_RUNTIME_DIR=/run/user/{{.UID}}" containerd-rootless-setuptool.sh install-buildkit
        sudo -iu "{{.User}}" "XDG_RUNTIME_DIR=/run/user/{{.UID}}" containerd-rootless-setuptool.sh install-fuse-overlayfs
        if ! sudo -iu "{{.User}}" "XDG_RUNTIME_DIR=/run/user/{{.UID}}" containerd-rootless-setuptool.sh install-stargz; then
          echo >&2 "WARNING: rootless stargz does not seem supported on this host (kernel older than 5.11?)"
        fi
        if [ -n "$selinux" ]; then
          echo "Restoring SELinux"
          setenforce 1
        fi
      fi
      {{- end}}
   owner: root:root
   path: /var/lib/cloud/scripts/per-boot/20-install-containerd.boot.sh
   permissions: '0755'
{{- end}}
{{- if .Provision}}
 - content: |
      #!/bin/bash
      set -eu -o pipefail
      {{- range $i, $val := .Provision}}
      {{- $script := printf "/var/lib/lima-guestagent/provision-%02d-%s" $i $val.Mode}}
      {{- if eq $val.Mode "system"}}
      {{$script}}
      {{- else}}
      until [ -e "/run/user/{{.UID}}/systemd/private" ]; do sleep 3; done
      sudo -iu "{{.User}}" "XDG_RUNTIME_DIR=/run/user/{{.UID}}" {{$script}}
      {{- end}}
      {{- end}}
   owner: root:root
   path: /var/lib/cloud/scripts/per-boot/30-execute-provision-scripts.boot.sh
   permissions: '0755'
{{- end}}
{{- range $i, $val := .Provision}}
 - content: {{printf "%q" $val.Script}}
   owner: root:root
   path: {{printf "/var/lib/lima-guestagent/provision-%02d-%s" $i $val.Mode}}
   permissions: '0755'
{{- end}}
