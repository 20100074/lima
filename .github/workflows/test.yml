name: test

on:
  push:
    branches:
      - master
      - 'release/**'
  pull_request:

jobs:
  project:
    name: Project Checks
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - uses: actions/checkout@v2
        with:
          fetch-depth: 25
      - name: "Check DCO sign"
        run: |
          go get -u github.com/vbatts/git-validation
          ./hack/validate-dco.sh

  golangci-lint:
    runs-on: macos-10.15
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.35
          args: --verbose

  unit:
    name: Unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-20.04]
    timeout-minutes: 20
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - uses: actions/checkout@v2
        with:
          fetch-depth: 25
      - name: Unit tests
        run: go test -v ./...

  integration:
    name: Integration (WIP)
    runs-on: macos-10.15
    timeout-minutes: 20
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - uses: actions/checkout@v2
        with:
          fetch-depth: 25
      - name: Make
        run: make

  artifacts:
    name: Artifacts
    # the release pipeline uses Linux, so we Linux here as well
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - uses: actions/checkout@v2
        with:
          fetch-depth: 25
      - name: Make artifacts
        run: make artifacts
