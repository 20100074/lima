# Deploy faasd (which installs a bundled containerd).
#
# It can be accessed from the host by authenticating with faas-cli;
# the ports are already forwarded automatically by lima:
#
# Get the faas-cli:
# $ curl -sLS https://cli.openfaas.com | sh
#
# You can now log into your gateway:
# $ export OPENFAAS_URL=http://localhost:8080
# $ limactl shell faasd sudo cat /var/lib/faasd/secrets/basic-auth-password | faas-cli login -u admin --password-stdin
# $
# $ faas-cli store deploy NodeInfo
#
# Deployed. 200 OK.
# URL: http://localhost:8080/function/nodeinfo
#
# This example requires Lima v0.7.0 or later.

images:
# Image is set to focal (20.04 LTS) for long-term stability
- location: "https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img"
  arch: "x86_64"
- location: "https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-arm64.img"
  arch: "aarch64"

# Mounts are disabled in this example, but can be enabled optionally.
mounts: []

# containerd is installed by the faasd installer script, not by Lima, so the values are set to false here.
containerd:
  system: false
  user: false

provision:
- mode: system
  script: |
    #!/bin/sh
    curl -sfL https://raw.githubusercontent.com/openfaas/faasd/master/hack/install.sh | sh -s -

probes:
- script: |
    #!/bin/bash
    set -eux -o pipefail
    if ! timeout 30s bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8080/healthz)" != "200" ]]; do sleep 5; done'; then
            echo >&2 "faasd is not running yet"
            exit 1
    fi
  hint: |
    The faasd service is not yet running.
    Run "limactl shell faasd sudo journalctl -u faasd" to check the log.
    If that is still empty, check the bottom of the log at "/var/log/cloud-init-output.log".
